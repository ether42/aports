diff --git i/lib/Driver/ToolChains.cpp w/lib/Driver/ToolChains.cpp
index e3ff0d7..68ed764 100644
--- i/lib/Driver/ToolChains.cpp
+++ w/lib/Driver/ToolChains.cpp
@@ -3408,6 +3408,13 @@ bool Linux::isPIEDefault() const {
   return getSanitizerArgs().requiresPIE();
 }
 
+unsigned Linux::GetDefaultStackProtectorLevel(bool KernelOrKext) const {
+  StringRef VendorName = Linux::getTriple().getVendorName();
+  if (VendorName.compare("dos") == 0)
+    return 2;
+  return 1;
+}
+
 /// DragonFly - DragonFly tool chain which can call as(1) and ld(1) directly.
 
 DragonFly::DragonFly(const Driver &D, const llvm::Triple& Triple, const ArgList &Args)
diff --git i/lib/Driver/ToolChains.h w/lib/Driver/ToolChains.h
index 47fb10d..3714a6f 100644
--- i/lib/Driver/ToolChains.h
+++ w/lib/Driver/ToolChains.h
@@ -641,6 +641,7 @@ public:
   AddClangCXXStdlibIncludeArgs(const llvm::opt::ArgList &DriverArgs,
                                llvm::opt::ArgStringList &CC1Args) const override;
   bool isPIEDefault() const override;
+  unsigned GetDefaultStackProtectorLevel(bool KernelOrKext) const override;
 
   std::string Linker;
   std::vector<std::string> ExtraOpts;
diff --git i/test/Driver/stack-protector.c w/test/Driver/stack-protector.c
index 7fecd1b..f29cee0 100644
--- i/test/Driver/stack-protector.c
+++ w/test/Driver/stack-protector.c
@@ -23,3 +23,18 @@
 // RUN: %clang -fstack-protector-all -### %s 2>&1 | FileCheck %s -check-prefix=SSP-ALL
 // SSP-ALL: "-stack-protector" "3"
 // SSP-ALL-NOT: "-stack-protector-buffer-size" 
+
+// RUN: %clang -target x86_64-dos-linux-musl -### %s 2>&1 | FileCheck %s -check-prefix=DOS
+// DOS: "-stack-protector" "2"
+
+// RUN: %clang -target x86_64-dos-linux-musl -fstack-protector -### %s 2>&1 | FileCheck %s -check-prefix=DOS_SPS
+// DOS_SPS: "-stack-protector" "2"
+
+// RUN: %clang -target x86_64-dos-linux-musl -fstack-protector-all -### %s 2>&1 | FileCheck %s -check-prefix=DOS_ALL
+// DOS_ALL: "-stack-protector" "3"
+// DOS_ALL-NOT: "-stack-protector-buffer-size"
+
+// RUN: %clang -target x86_64-dos-linux-musl -fno-stack-protector -### %s 2>&1 | FileCheck %s -check-prefix=DOS_NOSSP
+// DOS_NOSSP-NOT: "-stack-protector"
+// DOS_NOSSP-NOT: "-stack-protector-buffer-size"
+
